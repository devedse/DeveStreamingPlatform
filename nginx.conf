events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Custom log format with detailed proxy information
    log_format detailed '$remote_addr - $remote_user [$time_local] '
                       '"$request" $status $body_bytes_sent '
                       '"$http_referer" "$http_user_agent" '
                       'upstream: $upstream_addr '
                       'upstream_status: $upstream_status '
                       'request_time: $request_time '
                       'upstream_response_time: $upstream_response_time';

    # Logging
    access_log /var/log/nginx/access.log detailed;
    error_log /var/log/nginx/error.log;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml text/javascript application/json application/javascript application/xml+rss application/rss+xml font/truetype font/opentype application/vnd.ms-fontobject image/svg+xml;

    server {
        listen 80;
        server_name localhost;
        root /usr/share/nginx/html;
        index index.html;

        # Basic auth
        auth_basic "Restricted Access";
        auth_basic_user_file /etc/nginx/.htpasswd;

        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;

        # Never cache env-config.js (runtime configuration)
        location = /env-config.js {
            add_header Cache-Control "no-cache, no-store, must-revalidate" always;
            add_header Pragma "no-cache" always;
            expires 0;
        }

        # Cache static assets
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
        }

        # Reverse proxy for OME API
        location /omeapi/ {
            # Remove /omeapi prefix and forward to OME
            rewrite ^/omeapi/(.*) /$1 break;
            
            # Proxy to OME API server (configured via environment variable)
            proxy_pass ${OME_API_PROXY_URL};
            
            # Inject Basic Auth header for OME API
            # The token is injected at runtime via environment variable
            proxy_set_header Authorization "Basic ${OME_API_TOKEN_BASE64}";
            
            # Proxy headers
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket support (in case OME API uses WebSockets)
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            
            # Timeouts
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # Disable buffering for streaming responses
            proxy_buffering off;
            
            # CORS headers (if needed for cross-origin requests)
            add_header Access-Control-Allow-Origin * always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Authorization, Content-Type" always;
            
            # Handle preflight requests
            if ($request_method = OPTIONS) {
                return 204;
            }
        }

        # Reverse proxy for OME thumbnails (^~ stops regex matching, preventing .png regex from catching this)
        location ^~ /thumbnails/ {
            # Disable Basic Auth for thumbnails (OME thumbnails are public)
            auth_basic off;
            
            # Proxy to OME thumbnail server (configured via environment variable)
            proxy_pass ${OME_THUMBNAIL_PROXY_URL}/;
            
            # Proxy headers
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Disable caching for thumbnails (they update frequently)
            add_header Cache-Control "no-cache, no-store, must-revalidate" always;
            add_header Pragma "no-cache" always;
            expires 0;
            
            # CORS headers
            add_header Access-Control-Allow-Origin * always;
            
            # Timeouts
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }

        # SPA routing - all routes go to index.html
        location / {
            try_files $uri $uri/ /index.html;
        }

        # Disable caching for index.html
        location = /index.html {
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            expires 0;
        }
    }
}
